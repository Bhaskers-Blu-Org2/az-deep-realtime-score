# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master

variables:
- group: AzureKeyVault

jobs:
- job: MLAKSDeployAMLJob
  timeoutInMinutes: 300
  cancelTimeoutInMinutes: 2
  pool:
    name: AKSDeployment
    vmImage: 'GpuSelfHostedAgent'

  steps:
  - script: echo Hello, AKSDeployment!
    displayName: 'Builds source for AKSDeploymentTutorialAML/Keras_Tensorflow'

  - bash: |
      source /usr/share/miniconda/etc/profile.d/conda.sh
      which conda
      cd Keras_Tensorflow
      conda env create -f tutorial_env.yml
      source activate tutorial_env
      conda env list  
      echo Login Azure Account
      az login -t $(sptenent) --service-principal -u $(spidentity) --password $(spsecret)
    displayName: 'Build Configuration'

  - bash: |
      echo These are needed for all tasks
      source /usr/share/miniconda/etc/profile.d/conda.sh
      source activate tutorial_env

      echo Put in some code here.....
      echo Parameters can be found in the Library section.
      # papermill XXX.ipynb XXX_Output.ipynb --log-output --no-progress-bar -k python3 -p subscription_id $(azuresubscription) -p resource_group $(azureresourcegroup) -p workspace_name $(workspacename) -p workspace_region $(azureregion)
    displayName : 'Build Task Example'


  - bash: |
      source /usr/share/miniconda/etc/profile.d/conda.sh
      echo Remove Conda Environment
      conda remove -n 'tutorial_env' --all -q --force -y
      conda env list  
      echo Ensure Resource Group Deletion
       existResponse=$(az group exists -n $(azureresourcegroup))
      if [ "$existResponse" == "true" ]; then
        echo Deleting project resource group  
        az group delete --name $(azureresourcegroup) --yes
      else
        echo Project resource group did not exist
      fi
      echo Done Cleanup
    displayName: 'Cleanup Task'
    condition: always()